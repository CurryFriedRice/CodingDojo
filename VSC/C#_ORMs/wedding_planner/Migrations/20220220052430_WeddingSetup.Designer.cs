// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wedding_planner.Models;

namespace wedding_planner.Migrations
{
    [DbContext(typeof(WeddingPlannerContext))]
    [Migration("20220220052430_WeddingSetup")]
    partial class WeddingSetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("wedding_planner.Models.RSVP", b =>
                {
                    b.Property<int>("RSVPID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int?>("UsersUserID")
                        .HasColumnType("int");

                    b.Property<int>("WeddingID")
                        .HasColumnType("int");

                    b.Property<int?>("WeddingsWeddingID")
                        .HasColumnType("int");

                    b.HasKey("RSVPID");

                    b.HasIndex("UsersUserID");

                    b.HasIndex("WeddingsWeddingID");

                    b.ToTable("RSVPs");
                });

            modelBuilder.Entity("wedding_planner.Models.Users", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("wedding_planner.Models.Weddings", b =>
                {
                    b.Property<int>("WeddingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("WedderOne")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("WedderTwo")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("WeddingAddress")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("WeddingDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("WeddingID");

                    b.ToTable("Weddings");
                });

            modelBuilder.Entity("wedding_planner.Models.RSVP", b =>
                {
                    b.HasOne("wedding_planner.Models.Users", null)
                        .WithMany("WeddingsRSVP")
                        .HasForeignKey("UsersUserID");

                    b.HasOne("wedding_planner.Models.Weddings", null)
                        .WithMany("UserRSVP")
                        .HasForeignKey("WeddingsWeddingID");
                });
#pragma warning restore 612, 618
        }
    }
}

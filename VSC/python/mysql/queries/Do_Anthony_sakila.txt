1.
SELECT customer.first_name, customer.last_name, customer.email, address, address2, district, location FROM customer
LEFT JOIN address ON customer.address_id = address.address_id
LEFT JOIN city ON address.city_id = city.city_id
WHERE city.city_id = 312

2. 
SELECT film.title, film.description, film.release_year, film.rating, category.name AS genre, film.special_features FROM film_category
JOIN category ON film_category.category_id = category.category_id
JOIN film ON film_category.film_id = film.film_id
WHERE category.name = 'comedy'

3. 
-- What query would you run to get all the films joined by actor_id=5? 
-- Your query should return the actor id, actor name, film title, description, and release year.
SELECT actor.actor_id, actor.first_name, actor.last_name, film.title, film.description, film.release_year FROM film_actor
JOIN actor ON film_actor.actor_id = actor.actor_id
JOIN film ON film_actor.film_id = film.film_id
WHERE actor.actor_id = 5;


4.
SELECT customer.first_name, customer.last_name, customer.email, address.address, address.address2, district, country  FROM store
JOIN customer ON store.store_id = customer.store_id
JOIN address ON customer.address_id = address.address_id
JOIN city ON address.city_id = city.city_id
JOIN country ON city.country_id = country.country_id
WHERE 	address.city_id = 1 or 
		address.city_id = 42 or
        address.city_id = 312 or
        address.city_id = 459


5.
-- What query would you run to get all the films with a "rating = G" and 
-- "special feature = behind the scenes", joined by actor_id = 15? 
-- Your query should return the 
-- film title, description, release year, rating, and special feature. 
-- Hint: You may use LIKE function in getting the 'behind the scenes' part.
SELECT film.title, film.description, film.release_year, film.rating, film.special_features FROM film_actor
JOIN film on film_actor.film_id = film.film_id
WHERE 	film_actor.actor_id = 15 AND 
		film.special_features LIKE "%behind the scenes%" AND -- Behind the scenes anywhere in the featuers
		film.rating = 'g'



-- 6. What query would you run to get all the actors that joined in the film_id = 369? 
-- Your query should return the film_id, title, actor_id, and actor_name.
-- FIGURING OUT HOW TO USE CONCAT PROPERLY!
SELECT film_actor.film_id, film.title, film_actor.actor_id, CONCAT(actor.first_name, ' ' , actor.last_name) AS name FROM film_actor
JOIN actor ON film_actor.actor_id = actor.actor_id
JOIN film ON film_actor.film_id = film.film_id
WHERE film_actor.film_id = 369;


-- 7. What query would you run to get all drama films with a rental rate of 2.99? 
-- Your query should return film title, description, release year, rating, special features, 
-- and genre (category).

SELECT film.title, film.description, film.release_year, film.rating, film.special_features, category.name FROM rental
JOIN payment ON rental.rental_id = payment.rental_id
JOIN inventory ON rental.inventory_id = inventory.inventory_id
LEFT JOIN film ON film.film_id = inventory.film_id
LEFT JOIN film_category ON film.film_id = film_category.film_id
LEFT JOIN category ON film_category.category_id = category.category_id
WHERE 	payment.amount = 2.99 AND
		category.name = 'drama'
GROUP BY film.title


-- 8. What query would you run to get all the action films which are joined by SANDRA KILMER? 
-- Your query should return film title, description, release year, rating, special features, 
-- genre (category), and actor's first name and last name.

SELECT film.title, film.description, film.release_year, film.rating, film.special_features, category.name, actor.first_name, actor.last_name  FROM film 
LEFT JOIN film_actor ON film.film_id = film_actor.film_id
LEFT JOIN actor ON film_actor.actor_id = actor.actor_id
LEFT JOIN film_category ON film.film_id = film_category.film_id
LEFT JOIN category ON film_category.category_id = category.category_id
WHERE 	actor.first_name = 'SANDRA' AND 
		actor.last_name = 'KILMER' AND
        category.name = 'action'